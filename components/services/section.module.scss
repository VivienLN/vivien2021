$max-width: 340;

@mixin service-svg-mask($mask-url, $width, $height, $x: 0) {
    // All svg files are sized to be contained in a 320px column so everything can be calculated from there
    // $width and $height are the svg dimensions as they are saved. $x $y depends on mockup and is also translated to % values
    mask-image: url($mask-url);
    mask-size: (100% * $width / $max-width) auto;
    padding-bottom: (100% * $height / $max-width);
    // A little tricky because mask origin is not top/left but center of the mask 
    // (ie. if the mask is mask-size: 50% (width) and mask-position: 50% (left), it wont be aligned to the right, but centered)
    // ... but left 0% *IS* aligned to left
    // mask-position: (100% * $x / $max-width) 0;
    mask-position: ((100% * $x / $max-width) / ($width / $max-width)) center;
}

.serviceImage {
    background: linear-gradient(to bottom, #ffe200, #ffe200 70%, #e7c300 75%, #e7edf1 75%) fixed;
    mask-repeat: no-repeat;
}
.hexagon01 {
    @include service-svg-mask('../../public/images/services/hexagon.svg', 179, 194);
}
.line01 {
    @include service-svg-mask('../../public/images/services/line01.svg', 161, 268, 79);
}
.hexagon02 {
    @include service-svg-mask('../../public/images/services/hexagon.svg', 179, 194, 172);
}
.line02 {
    @include service-svg-mask('../../public/images/services/line02.svg', 250, 319);
    margin-bottom: -(100% * 46 / $max-width);
}
.hexagon03 {
    @include service-svg-mask('../../public/images/services/hexagon.svg', 179, 194, 50);
}